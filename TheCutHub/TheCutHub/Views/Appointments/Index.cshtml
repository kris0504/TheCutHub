@model IPagedList<TheCutHub.Models.Appointment>

@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "My Appointments";
    var now = DateTime.Now;
}

<h1 class="mb-4">My Appointments</h1>

<a class="btn btn-primary mb-4" asp-action="Create">
    <i class="bi bi-plus-circle me-1"></i> Create New
</a>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> You have no appointments yet.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-borderless align-middle">
            <thead class="border-bottom border-secondary">
                <tr class="text-uppercase text-muted small">
                    <th>Date</th>
                    <th>Time</th>
                    <th>Barber</th>
                    <th>Service</th>
                    <th>Notes</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model)
                {
                    var isPast = appointment.Date.Date < now.Date ||
                    (appointment.Date.Date == now.Date && appointment.TimeSlot < now.TimeOfDay);

                    var rowClass = isPast ? "bg-secondary past-appointment" : "bg-dark text-light";
                    <tr class="@rowClass">

                        <td>@appointment.Date.ToString("dd.MM.yyyy")</td>
                        <td>@appointment.TimeSlot.ToString(@"hh\:mm")</td>
                        <td>@appointment.Barber?.FullName</td>
                        <td>@appointment.Service?.Name</td>
                        <td>@appointment.Notes</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@appointment.Id" class="btn btn-sm btn-outline-primary me-2">
                                <i class="bi bi-eye"></i> View
                            </a>
                            <a asp-action="Delete" asp-route-id="@appointment.Id" class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="mt-3 d-flex justify-content-center">
            @Html.PagedListPager(
                     (IPagedList)Model,
                     page => Url.Action("Index", new { page }),
                     new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.Always,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ContainerDivClasses = new[] { "d-flex", "justify-content-center" },
            MaximumPageNumbersToDisplay = 5
        })
        </div>
    </div>
}
