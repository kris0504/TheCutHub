@using X.PagedList.Web.Common
@model IPagedList<TheCutHub.Models.Review>

@if (!Model.Any())
{
	<p class="text-muted"><em>No reviews yet.</em></p>
}
else
{
	<div class="review-list">
		@foreach (var review in Model)
		{
			<div class="card bg-dark border-secondary text-light mb-3 shadow-sm">
				<div class="card-body">
					<div class="d-flex justify-content-between align-items-start">
						<div>
							<strong class="text-gold">@review.User?.UserName</strong>
							<div class="text-warning">
								@for (int i = 1; i <= 5; i++)
								{
									<i class="bi @(i <= review.Rating ? "bi-star-fill" : "bi-star")"></i>
								}
							</div>
						</div>
						@if ((User.Identity.IsAuthenticated && User.Identity.Name == review.User?.UserName) || User.IsInRole("Administrator"))
						{
							<form asp-controller="Reviews" asp-action="Delete" method="post" class="ms-3">
								@Html.AntiForgeryToken()
								<input type="hidden" name="id" value="@review.Id" />
								<button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
							</form>
						}
					</div>

					<p class="mt-2 mb-0">@review.Comment</p>
				</div>
			</div>
		}
	</div>
}

<div class="mt-3">
	@if (Model.PageCount > 1)
	{
				@Html.PagedListPager(
							Model,
							page => Url.Action("List", new { barberId = ViewBag.BarberId, page }),
							new PagedListRenderOptions
				{
					UlElementClasses = new[] { "pagination", "justify-content-center" },
					LiElementClasses = new[] { "page-item" },
					PageClasses = new[] { "page-link" },
					DisplayLinkToFirstPage = PagedListDisplayMode.Always,
					DisplayLinkToLastPage = PagedListDisplayMode.Always,
					DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
					DisplayLinkToNextPage = PagedListDisplayMode.Always,
					DisplayEllipsesWhenNotShowingAllPageNumbers = true
				})

	}
</div>
